{"version":3,"sources":["webpack:///./node_modules/core-js/internals/regexp-unsupported-ncg.js","webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/core-js/modules/es.string.search.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./src/views/qnyh/KeJu.vue","webpack:///./node_modules/fuse.js/dist/fuse.esm.js","webpack:///./src/views/qnyh/KeJu.vue?1836","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/core-js/internals/regexp-unsupported-dot-all.js"],"names":["fails","global","$RegExp","RegExp","module","exports","re","exec","groups","a","replace","Object","is","x","y","classof","regexpExec","R","S","result","call","TypeError","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","toString","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","this","searcher","undefined","string","rx","res","done","value","previousLastIndex","lastIndex","index","regexpFlags","stickyHelpers","shared","create","getInternalState","get","UNSUPPORTED_DOT_ALL","UNSUPPORTED_NCG","nativeExec","prototype","nativeReplace","String","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","PATCH","reCopy","match","i","object","group","state","str","raw","sticky","flags","source","charsAdded","strCopy","indexOf","slice","multiline","charAt","input","length","arguments","$","target","proto","forced","that","ignoreCase","dotAll","unicode","searchVal","type","placeholder","search","item","key","q","isArray","Array","getTag","INFINITY","baseToString","isString","isNumber","isBoolean","isObjectLike","isObject","isDefined","isBlank","trim","INCORRECT_INDEX_TYPE","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","PATTERN_LENGTH_TOO_LARGE","max","MISSING_KEY_PROPERTY","name","INVALID_KEY_WEIGHT_VALUE","hasOwn","hasOwnProperty","KeyStore","keys","_keys","_keyMap","totalWeight","forEach","obj","createKey","weight","push","id","keyId","JSON","stringify","path","src","createKeyPath","createKeyId","Error","split","join","list","arr","deepGet","len","MatchOptions","includeMatches","findAllMatches","minMatchCharLength","BasicOptions","isCaseSensitive","includeScore","shouldSort","sortFn","b","score","idx","FuzzyOptions","location","threshold","distance","AdvancedOptions","useExtendedSearch","getFn","ignoreLocation","ignoreFieldNorm","Config","SPACE","norm","mantissa","cache","Map","m","Math","pow","numTokens","has","sqrt","n","parseFloat","round","set","clear","FuseIndex","isCreated","setIndexRecords","docs","records","_keysMap","doc","docIndex","_addString","_addObject","size","splice","record","v","keyIndex","subRecords","stack","nestedArrIndex","pop","subRecord","k","createIndex","myIndex","setKeys","map","setSources","parseIndex","data","computeScore","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","convertMaskToIndices","matchmask","indices","start","end","MAX_BITS","text","patternAlphabet","patternLen","textLen","min","currentThreshold","bestLocation","computeMatches","matchMask","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","finish","bitArr","j","charMatch","isMatch","createPatternAlphabet","char","BitapSearch","options","toLowerCase","chunks","addChunk","startIndex","alphabet","remainder","substr","allIndices","totalScore","hasMatches","BaseMatch","getMatch","multiRegex","singleRegex","exp","matches","ExactMatch","super","InverseExactMatch","PrefixExactMatch","startsWith","InversePrefixExactMatch","SuffixExactMatch","endsWith","InverseSuffixExactMatch","FuzzyMatch","_bitapSearch","searchIn","IncludeMatch","searchers","searchersLen","SPACE_RE","OR_TOKEN","parseQuery","query","filter","results","queryItem","found","token","isMultiMatch","isSingleMatch","MultiMatchSet","Set","ExtendedSearch","_","numMatches","qLen","pLen","constructor","registeredSearchers","register","args","createSearcher","searcherClass","condition","LogicalOperator","AND","OR","KeyType","PATH","PATTERN","isExpression","isPath","isLeaf","convertToExplicit","parse","auto","next","isQueryPath","node","children","operator","computeScore$1","Number","EPSILON","transformMatches","refIndex","transformScore","format","transformers","transformer","Fuse","_keyStore","setCollection","_docs","_myIndex","add","predicate","removeAt","limit","_searchStringList","_searchObjectList","_searchLogical","sort","expression","evaluate","_findMatches","getValueForItemAtKeyId","child","resultMap","expResults","version","config","methods","initIdx","keju","mounted","render","redefine","wellKnownSymbol","createNonEnumerableProperty","SPECIES","RegExpPrototype","KEY","FORCED","SHAM","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","nativeMethod","arg2","forceStringMethod","$exec"],"mappings":"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","file":"js/qnyh-keju.af6212a3.js","sourcesContent":["var fails = require('./fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('(?<a>b)', 'g');\n  return re.exec('b').groups.a !== 'b' ||\n    'b'.replace(re, '$<a>c') !== 'bc';\n});\n","// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar toString = require('../internals/to-string');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](toString(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeSearch, rx, S);\n\n      if (res.done) return res.value;\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","'use strict';\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\n/* eslint-disable regexp/no-useless-quantifier -- testing */\nvar toString = require('../internals/to-string');\nvar regexpFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar shared = require('../internals/shared');\nvar create = require('../internals/object-create');\nvar getInternalState = require('../internals/internal-state').get;\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar nativeExec = RegExp.prototype.exec;\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\n\nif (PATCH) {\n  // eslint-disable-next-line max-statements -- TODO\n  patchedExec = function exec(string) {\n    var re = this;\n    var state = getInternalState(re);\n    var str = toString(string);\n    var raw = state.raw;\n    var result, reCopy, lastIndex, match, i, object, group;\n\n    if (raw) {\n      raw.lastIndex = re.lastIndex;\n      result = patchedExec.call(raw, str);\n      re.lastIndex = raw.lastIndex;\n      return result;\n    }\n\n    var groups = state.groups;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = str.slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str.charAt(re.lastIndex - 1) !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    if (match && groups) {\n      match.groups = object = create(null);\n      for (i = 0; i < groups.length; i++) {\n        group = groups[i];\n        object[group[0]] = match[group[1]];\n      }\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nexports.UNSUPPORTED_Y = fails(function () {\n  var re = $RegExp('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = $RegExp('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n// `RegExp.prototype.exec` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","<template>\r\n  <div>\r\n    <input v-model=\"searchVal\" type=\"text\" placeholder=\"search\" @change=\"search\"/>\r\n    <button @click=\"search\">search</button>\r\n  </div>\r\n  <div>\r\n    <div v-for=\"({item}, index) in result\" :key=\"index\">\r\n      <div>{{ item.q }}</div>\r\n      <div>{{ item.a }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport kejuJson from '../../../node/qnyh/keju.json'\r\nimport Fuse from 'fuse.js'\r\n\r\nexport default {\r\n  name: \"KeJu\",\r\n  data() {\r\n    return {\r\n      searchVal: '',\r\n      idx: null,\r\n      result: []\r\n    }\r\n  },\r\n  methods: {\r\n    initIdx() {\r\n      const options = {\r\n        // isCaseSensitive: false,\r\n        // includeScore: false,\r\n        // shouldSort: true,\r\n        // includeMatches: false,\r\n        // findAllMatches: false,\r\n        minMatchCharLength: 1,\r\n        // location: 0,\r\n        // threshold: 0.6,\r\n        // distance: 100,\r\n        // useExtendedSearch: false,\r\n        // ignoreLocation: false,\r\n        // ignoreFieldNorm: false,\r\n        keys: [\r\n          'q',\r\n          'py'\r\n        ]\r\n      };\r\n\r\n      this.idx = new Fuse(kejuJson, options);\r\n    },\r\n    search() {\r\n      if (!this.searchVal) {\r\n        return\r\n      }\r\n      this.result = this.idx.search(this.searchVal)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initIdx()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","/**\n * Fuse.js v6.4.6 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2021 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n  }\n\n  return { path, id, weight, src }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      const norm = 1 / Math.sqrt(numTokens);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({ getFn = Config.getFn } = {}) {\n    this.norm = norm(3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      // console.log(key)\n      let value = this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          }\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (!isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(keys, docs, { getFn = Config.getFn } = {}) {\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(data, { getFn = Config.getFn } = {}) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore$1(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore$1(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      /*eslint indent: [2, 2, {\"SwitchCase\": 1}]*/\n      switch (node.operator) {\n        case LogicalOperator.AND: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n            } else {\n              return []\n            }\n          }\n          return res\n        }\n        case LogicalOperator.OR: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n              break\n            }\n          }\n          return res\n        }\n      }\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.4.6';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport default Fuse;\n","import { render } from \"./KeJu.vue?vue&type=template&id=0ca96d7a\"\nimport script from \"./KeJu.vue?vue&type=script&lang=js\"\nexport * from \"./KeJu.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    redefine(String.prototype, KEY, methods[0]);\n    redefine(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n","var fails = require('./fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('.', 's');\n  return !(re.dotAll && re.exec('\\n') && re.flags === 's');\n});\n"],"sourceRoot":""}